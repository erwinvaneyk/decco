
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: apps.decco.platform9.com
spec:
  group: decco.platform9.com
  names:
    kind: App
    plural: apps
  scope: ""
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: App is the Schema for the apps API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          properties:
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with
                a resource that may be set by external tools to store and retrieve
                arbitrary metadata. They are not queryable and should be preserved
                when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
            clusterName:
              description: The name of the cluster which the object belongs to. This
                is used to distinguish resources with same name and namespace in different
                clusters. This field is not set anywhere right now and apiserver is
                going to ignore it if set in create or update request.
              type: string
            creationTimestamp:
              description: "CreationTimestamp is a timestamp representing the server
                time when this object was created. It is not guaranteed to be set
                in happens-before order across separate operations. Clients may not
                set this value. It is represented in RFC3339 form and is in UTC. \n
                Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata"
              format: date-time
              type: string
            deletionGracePeriodSeconds:
              description: Number of seconds allowed for this object to gracefully
                terminate before it will be removed from the system. Only set when
                deletionTimestamp is also set. May only be shortened. Read-only.
              format: int64
              type: integer
            deletionTimestamp:
              description: "DeletionTimestamp is RFC 3339 date and time at which this
                resource will be deleted. This field is set by the server when a graceful
                deletion is requested by the user, and is not directly settable by
                a client. The resource is expected to be deleted (no longer visible
                from resource lists, and not reachable by name) after the time in
                this field, once the finalizers list is empty. As long as the finalizers
                list contains items, deletion is blocked. Once the deletionTimestamp
                is set, this value may not be unset or be set further into the future,
                although it may be shortened or the resource may be deleted prior
                to this time. For example, a user may request that a pod is deleted
                in 30 seconds. The Kubelet will react by sending a graceful termination
                signal to the containers in the pod. After that 30 seconds, the Kubelet
                will send a hard termination signal (SIGKILL) to the container and
                after cleanup, remove the pod from the API. In the presence of network
                partitions, this object may still exist after this timestamp, until
                an administrator or automated process can determine the resource is
                fully terminated. If not set, graceful deletion of the object has
                not been requested. \n Populated by the system when a graceful deletion
                is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata"
              format: date-time
              type: string
            finalizers:
              description: Must be empty before the object is deleted from the registry.
                Each entry is an identifier for the responsible component that will
                remove the entry from the list. If the deletionTimestamp of the object
                is non-nil, entries in this list can only be removed.
              items:
                type: string
              type: array
            generateName:
              description: "GenerateName is an optional prefix, used by the server,
                to generate a unique name ONLY IF the Name field has not been provided.
                If this field is used, the name returned to the client will be different
                than the name passed. This value will also be combined with a unique
                suffix. The provided value has the same validation rules as the Name
                field, and may be truncated by the length of the suffix required to
                make the value unique on the server. \n If this field is specified
                and the generated name exists, the server will NOT return a 409 -
                instead, it will either return 201 Created or 500 with Reason ServerTimeout
                indicating a unique name could not be found in the time allotted,
                and the client should retry (optionally after the time indicated in
                the Retry-After header). \n Applied only if Name is not specified.
                More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency"
              type: string
            generation:
              description: A sequence number representing a specific generation of
                the desired state. Populated by the system. Read-only.
              format: int64
              type: integer
            initializers:
              description: "An initializer is a controller which enforces some system
                invariant at object creation time. This field is a list of initializers
                that have not yet acted on this object. If nil or empty, this object
                has been completely initialized. Otherwise, the object is considered
                uninitialized and is hidden (in list/watch and get calls) from clients
                that haven't explicitly asked to observe uninitialized objects. \n
                When an object is created, the system will populate this list with
                the current set of initializers. Only privileged users may set or
                modify this list. Once it is empty, it may not be modified further
                by any user. \n DEPRECATED - initializers are an alpha field and will
                be removed in v1.15."
              properties:
                pending:
                  description: Pending is a list of initializers that must execute
                    in order before this object is visible. When the last pending
                    initializer is removed, and no failing result is set, the initializers
                    struct will be set to nil and the object is considered as initialized
                    and visible to all clients.
                  items:
                    properties:
                      name:
                        description: name of the process that is responsible for initializing
                          this object.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                result:
                  description: If result is set with the Failure field, the object
                    will be persisted to storage and then deleted, ensuring that other
                    clients can observe the deletion.
                  properties:
                    apiVersion:
                      description: 'APIVersion defines the versioned schema of this
                        representation of an object. Servers should convert recognized
                        schemas to the latest internal value, and may reject unrecognized
                        values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                      type: string
                    code:
                      description: Suggested HTTP return code for this status, 0 if
                        not set.
                      format: int32
                      type: integer
                    details:
                      description: Extended data associated with the reason.  Each
                        reason may define its own extended details. This field is
                        optional and the data returned is not guaranteed to conform
                        to any schema except that defined by the reason type.
                      properties:
                        causes:
                          description: The Causes array includes more details associated
                            with the StatusReason failure. Not all StatusReasons may
                            provide detailed causes.
                          items:
                            properties:
                              field:
                                description: "The field of the resource that has caused
                                  this error, as named by its JSON serialization.
                                  May include dot and postfix notation for nested
                                  attributes. Arrays are zero-indexed.  Fields may
                                  appear more than once in an array of causes due
                                  to fields having multiple errors. Optional. \n Examples:
                                  \  \"name\" - the field \"name\" on the current
                                  resource   \"items[0].name\" - the field \"name\"
                                  on the first array entry in \"items\""
                                type: string
                              message:
                                description: A human-readable description of the cause
                                  of the error.  This field may be presented as-is
                                  to a reader.
                                type: string
                              reason:
                                description: A machine-readable description of the
                                  cause of the error. If this value is empty there
                                  is no information available.
                                type: string
                            type: object
                          type: array
                        group:
                          description: The group attribute of the resource associated
                            with the status StatusReason.
                          type: string
                        kind:
                          description: 'The kind attribute of the resource associated
                            with the status StatusReason. On some operations may differ
                            from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: The name attribute of the resource associated
                            with the status StatusReason (when there is a single name
                            which can be described).
                          type: string
                        retryAfterSeconds:
                          description: If specified, the time in seconds before the
                            operation should be retried. Some errors may indicate
                            the client must take an alternate action - for those errors
                            this field may indicate how long to wait before taking
                            the alternate action.
                          format: int32
                          type: integer
                        uid:
                          description: 'UID of the resource. (when there is a single
                            resource which can be described). More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                          type: string
                      type: object
                    kind:
                      description: 'Kind is a string value representing the REST resource
                        this object represents. Servers may infer this from the endpoint
                        the client submits requests to. Cannot be updated. In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                      type: string
                    message:
                      description: A human-readable description of the status of this
                        operation.
                      type: string
                    metadata:
                      description: 'Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                      properties:
                        continue:
                          description: continue may be set if the user set a limit
                            on the number of items returned, and indicates that the
                            server has more data available. The value is opaque and
                            may be used to issue another request to the endpoint that
                            served this list to retrieve the next set of available
                            objects. Continuing a consistent list may not be possible
                            if the server configuration has changed or more than a
                            few minutes have passed. The resourceVersion field returned
                            when using this continue value will be identical to the
                            value in the first response, unless you have received
                            this token from an error message.
                          type: string
                        resourceVersion:
                          description: 'String that identifies the server''s internal
                            version of this object that can be used by clients to
                            determine when objects have changed. Value must be treated
                            as opaque by clients and passed unmodified back to the
                            server. Populated by the system. Read-only. More info:
                            https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        selfLink:
                          description: selfLink is a URL representing this object.
                            Populated by the system. Read-only.
                          type: string
                      type: object
                    reason:
                      description: A machine-readable description of why this operation
                        is in the "Failure" status. If this value is empty there is
                        no information available. A Reason clarifies an HTTP status
                        code but does not override it.
                      type: string
                    status:
                      description: 'Status of the operation. One of: "Success" or
                        "Failure". More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status'
                      type: string
                  type: object
              required:
              - pending
              type: object
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize
                and categorize (scope and select) objects. May match selectors of
                replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            managedFields:
              description: "ManagedFields maps workflow-id and version to the set
                of fields that are managed by that workflow. This is mostly for internal
                housekeeping, and users typically shouldn't need to set or understand
                this field. A workflow can be the user's name, a controller's name,
                or the name of a specific apply path like \"ci-cd\". The set of fields
                is always in the version that the workflow used when modifying the
                object. \n This field is alpha and can be changed or removed without
                notice."
              items:
                properties:
                  apiVersion:
                    description: APIVersion defines the version of this resource that
                      this field set applies to. The format is "group/version" just
                      like the top-level APIVersion field. It is necessary to track
                      the version of a field set because it cannot be automatically
                      converted.
                    type: string
                  fields:
                    additionalProperties: true
                    description: Fields identifies a set of fields.
                    type: object
                  manager:
                    description: Manager is an identifier of the workflow managing
                      these fields.
                    type: string
                  operation:
                    description: Operation is the type of operation which lead to
                      this ManagedFieldsEntry being created. The only valid values
                      for this field are 'Apply' and 'Update'.
                    type: string
                  time:
                    description: Time is timestamp of when these fields were set.
                      It should always be empty if Operation is 'Apply'
                    format: date-time
                    type: string
                type: object
              type: array
            name:
              description: 'Name must be unique within a namespace. Is required when
                creating resources, although some resources may allow a client to
                request the generation of an appropriate name automatically. Name
                is primarily intended for creation idempotence and configuration definition.
                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            namespace:
              description: "Namespace defines the space within each name must be unique.
                An empty namespace is equivalent to the \"default\" namespace, but
                \"default\" is the canonical representation. Not all objects are required
                to be scoped to a namespace - the value of this field for those objects
                will be empty. \n Must be a DNS_LABEL. Cannot be updated. More info:
                http://kubernetes.io/docs/user-guide/namespaces"
              type: string
            ownerReferences:
              description: List of objects depended by this object. If ALL objects
                in the list have been deleted, this object will be garbage collected.
                If this object is managed by a controller, then an entry in this list
                will point to this controller, with the controller field set to true.
                There cannot be more than one managing controller.
              items:
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  blockOwnerDeletion:
                    description: If true, AND if the owner has the "foregroundDeletion"
                      finalizer, then the owner cannot be deleted from the key-value
                      store until this reference is removed. Defaults to false. To
                      set this field, a user needs "delete" permission of the owner,
                      otherwise 422 (Unprocessable Entity) will be returned.
                    type: boolean
                  controller:
                    description: If true, this reference points to the managing controller.
                    type: boolean
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                    type: string
                required:
                - apiVersion
                - kind
                - name
                - uid
                type: object
              type: array
            resourceVersion:
              description: "An opaque value that represents the internal version of
                this object that can be used by clients to determine when objects
                have changed. May be used for optimistic concurrency, change detection,
                and the watch operation on a resource or set of resources. Clients
                must treat these values as opaque and passed unmodified back to the
                server. They may only be valid for a particular resource or set of
                resources. \n Populated by the system. Read-only. Value must be treated
                as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency"
              type: string
            selfLink:
              description: SelfLink is a URL representing this object. Populated by
                the system. Read-only.
              type: string
            uid:
              description: "UID is the unique in time and space value for this object.
                It is typically generated by the server on successful creation of
                a resource and is not allowed to change on PUT operations. \n Populated
                by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
              type: string
          type: object
        spec:
          properties:
            name:
              description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                Important: Run "make" to regenerate code after modifying this file'
              type: string
            virtualServiceSpec:
              description: https://github.com/istio/istio/blob/cda495f5093cc917d80f25686c2a16dffcbe85dd/pilot/pkg/networking/core/v1alpha3/gateway_test.go#L844
                VirtualService in Istio. Certain fields will be ignored since some
                of the fields will be deterimined by what Space the App is being deployed
                into.
              properties:
                exportTo:
                  description: "A list of namespaces to which this destination rule
                    is exported. The resolution of a destination rule to apply to
                    a service occurs in the context of a hierarchy of namespaces.
                    Exporting a destination rule allows it to be included in the resolution
                    hierarchy for services in other namespaces. This feature provides
                    a mechanism for service owners and mesh administrators to control
                    the visibility of destination rules across namespace boundaries.
                    \n If no namespaces are specified then the destination rule is
                    exported to all namespaces by default. \n The value \".\" is reserved
                    and defines an export to the same namespace that the destination
                    rule is declared in. Similarly, the value \"*\" is reserved and
                    defines an export to all namespaces. \n NOTE: in the current release,
                    the `exportTo` value is restricted to \".\" or \"*\" (i.e., the
                    current namespace or all namespaces)."
                  items:
                    type: string
                  type: array
                gateways:
                  description: The names of gateways and sidecars that should apply
                    these routes. A single VirtualService is used for sidecars inside
                    the mesh as well as for one or more gateways. The selection condition
                    imposed by this field can be overridden using the source field
                    in the match conditions of HTTP/TCP routes. The reserved word
                    "mesh" is used to imply all the sidecars in the mesh. When this
                    field is omitted, the default gateway ("mesh") will be used, which
                    would apply the rule to all sidecars in the mesh. If a list of
                    gateway names is provided, the rules will apply only to the gateways.
                    To apply the rules to both gateways and sidecars, specify "mesh"
                    as one of the gateway names.
                  items:
                    type: string
                  type: array
                hosts:
                  description: "REQUIRED. The destination address for traffic captured
                    by this virtual service. Could be a DNS name with wildcard prefix
                    or a CIDR prefix. Depending on the platform, short-names can also
                    be used instead of a FQDN (i.e. has no dots in the name). In such
                    a scenario, the FQDN of the host would be derived based on the
                    underlying platform. \n For example on Kubernetes, when hosts
                    contains a short name, Istio will interpret the short name based
                    on the namespace of the rule. Thus, when a client namespace applies
                    a rule in the \"default\" namespace containing a name \"reviews,
                    Istio will setup routes to the \"reviews.default.svc.cluster.local\"
                    service. However, if a different name such as \"reviews.sales.svc.cluster.local\"
                    is used, it would be treated as a FQDN during virtual host matching.
                    In Consul, a plain service name would be resolved to the FQDN
                    \"reviews.service.consul\". \n Note that the hosts field applies
                    to both HTTP and TCP services. Service inside the mesh, i.e.,
                    those found in the service registry, must always be referred to
                    using their alphanumeric names. IP addresses or CIDR prefixes
                    are allowed only for services defined via the Gateway."
                  items:
                    type: string
                  type: array
                http:
                  description: An ordered list of route rules for HTTP traffic. The
                    first rule matching an incoming request is used.
                  items:
                    properties:
                      appendHeaders:
                        additionalProperties:
                          type: string
                        description: Additional HTTP headers to add before forwarding
                          a request to the destination service.
                        type: object
                      corsPolicy:
                        description: Cross-Origin Resource Sharing policy
                        properties:
                          allowCredentials:
                            description: Indicates whether the caller is allowed to
                              send the actual request (not the preflight) using credentials.
                              Translates to Access-Control-Allow-Credentials header.
                            type: boolean
                          allowHeaders:
                            description: List of HTTP headers that can be used when
                              requesting the resource. Serialized to Access-Control-Allow-Methods
                              header.
                            items:
                              type: string
                            type: array
                          allowMethods:
                            description: List of HTTP methods allowed to access the
                              resource. The content will be serialized into the Access-Control-Allow-Methods
                              header.
                            items:
                              type: string
                            type: array
                          allowOrigin:
                            description: The list of origins that are allowed to perform
                              CORS requests. The content will be serialized into the
                              Access-Control-Allow-Origin header. Wildcard * will
                              allow all origins.
                            items:
                              type: string
                            type: array
                          exposeHeaders:
                            description: A white list of HTTP headers that the browsers
                              are allowed to access. Serialized into Access-Control-Expose-Headers
                              header.
                            items:
                              type: string
                            type: array
                          maxAge:
                            description: Specifies how long the results of a preflight
                              request can be cached. Translates to the Access-Control-Max-Age
                              header.
                            type: string
                        type: object
                      fault:
                        description: Fault injection policy to apply on HTTP traffic.
                        properties:
                          abort:
                            description: Abort Http request attempts and return error
                              codes back to downstream service, giving the impression
                              that the upstream service is faulty.
                            properties:
                              httpStatus:
                                description: REQUIRED. HTTP status code to use to
                                  abort the Http request.
                                type: integer
                              percent:
                                description: Percentage of requests to be aborted
                                  with the error code provided (0-100).
                                type: integer
                            required:
                            - httpStatus
                            type: object
                          delay:
                            description: Delay requests before forwarding, emulating
                              various failures such as network issues, overloaded
                              upstream service, etc.
                            properties:
                              exponentialDelay:
                                description: (-- Add a delay (based on an exponential
                                  function) before forwarding the request. mean delay
                                  needed to derive the exponential delay values --)
                                type: string
                              fixedDelay:
                                description: 'REQUIRED. Add a fixed delay before forwarding
                                  the request. Format: 1h/1m/1s/1ms. MUST be >=1ms.'
                                type: string
                              percent:
                                description: Percentage of requests on which the delay
                                  will be injected (0-100).
                                type: integer
                            required:
                            - fixedDelay
                            type: object
                        type: object
                      headers:
                        description: Header manipulation rules
                        properties:
                          request:
                            description: Header manipulation rules to apply before
                              forwarding a request to the destination service
                            properties:
                              add:
                                additionalProperties:
                                  type: string
                                description: Append the given values to the headers
                                  specified by keys (will create a comma-separated
                                  list of values)
                                type: object
                              remove:
                                description: Remove a the specified headers
                                items:
                                  type: string
                                type: array
                              set:
                                additionalProperties:
                                  type: string
                                description: Overwrite the headers specified by key
                                  with the given values
                                type: object
                            type: object
                          response:
                            description: Header manipulation rules to apply before
                              returning a response to the caller
                            properties:
                              add:
                                additionalProperties:
                                  type: string
                                description: Append the given values to the headers
                                  specified by keys (will create a comma-separated
                                  list of values)
                                type: object
                              remove:
                                description: Remove a the specified headers
                                items:
                                  type: string
                                type: array
                              set:
                                additionalProperties:
                                  type: string
                                description: Overwrite the headers specified by key
                                  with the given values
                                type: object
                            type: object
                        type: object
                      match:
                        description: Match conditions to be satisfied for the rule
                          to be activated. All conditions inside a single match block
                          have AND semantics, while the list of match blocks have
                          OR semantics. The rule is matched if any one of the match
                          blocks succeed.
                        items:
                          properties:
                            authority:
                              description: "HTTP Authority values are case-sensitive
                                and formatted as follows: \n - `exact: \"value\"`
                                for exact string match \n - `prefix: \"value\"` for
                                prefix-based match \n - `regex: \"value\"` for ECMAscript
                                style regex-based match"
                              properties:
                                exact:
                                  description: exact string match
                                  type: string
                                prefix:
                                  description: prefix-based match
                                  type: string
                                regex:
                                  description: ECMAscript style regex-based match
                                  type: string
                                suffix:
                                  description: suffix-based match.
                                  type: string
                              type: object
                            gateways:
                              description: Names of gateways where the rule should
                                be applied to. Gateway names at the top of the VirtualService
                                (if any) are overridden. The gateway match is independent
                                of sourceLabels.
                              items:
                                type: string
                              type: array
                            headers:
                              additionalProperties:
                                properties:
                                  exact:
                                    description: exact string match
                                    type: string
                                  prefix:
                                    description: prefix-based match
                                    type: string
                                  regex:
                                    description: ECMAscript style regex-based match
                                    type: string
                                  suffix:
                                    description: suffix-based match.
                                    type: string
                                type: object
                              description: "The header keys must be lowercase and
                                use hyphen as the separator, e.g. _x-request-id_.
                                \n Header values are case-sensitive and formatted
                                as follows: \n - `exact: \"value\"` for exact string
                                match \n - `prefix: \"value\"` for prefix-based match
                                \n - `regex: \"value\"` for ECMAscript style regex-based
                                match \n **Note:** The keys `uri`, `scheme`, `method`,
                                and `authority` will be ignored."
                              type: object
                            method:
                              description: "HTTP Method values are case-sensitive
                                and formatted as follows: \n - `exact: \"value\"`
                                for exact string match \n - `prefix: \"value\"` for
                                prefix-based match \n - `regex: \"value\"` for ECMAscript
                                style regex-based match"
                              properties:
                                exact:
                                  description: exact string match
                                  type: string
                                prefix:
                                  description: prefix-based match
                                  type: string
                                regex:
                                  description: ECMAscript style regex-based match
                                  type: string
                                suffix:
                                  description: suffix-based match.
                                  type: string
                              type: object
                            port:
                              description: Specifies the ports on the host that is
                                being addressed. Many services only expose a single
                                port or label ports with the protocols they support,
                                in these cases it is not required to explicitly select
                                the port.
                              format: int32
                              type: integer
                            scheme:
                              description: "URI Scheme values are case-sensitive and
                                formatted as follows: \n - `exact: \"value\"` for
                                exact string match \n - `prefix: \"value\"` for prefix-based
                                match \n - `regex: \"value\"` for ECMAscript style
                                regex-based match"
                              properties:
                                exact:
                                  description: exact string match
                                  type: string
                                prefix:
                                  description: prefix-based match
                                  type: string
                                regex:
                                  description: ECMAscript style regex-based match
                                  type: string
                                suffix:
                                  description: suffix-based match.
                                  type: string
                              type: object
                            sourceLabels:
                              additionalProperties:
                                type: string
                              description: One or more labels that constrain the applicability
                                of a rule to workloads with the given labels. If the
                                VirtualService has a list of gateways specified at
                                the top, it should include the reserved gateway `mesh`
                                in order for this field to be applicable.
                              type: object
                            uri:
                              description: "URI to match values are case-sensitive
                                and formatted as follows: \n - `exact: \"value\"`
                                for exact string match \n - `prefix: \"value\"` for
                                prefix-based match \n - `regex: \"value\"` for ECMAscript
                                style regex-based match"
                              properties:
                                exact:
                                  description: exact string match
                                  type: string
                                prefix:
                                  description: prefix-based match
                                  type: string
                                regex:
                                  description: ECMAscript style regex-based match
                                  type: string
                                suffix:
                                  description: suffix-based match.
                                  type: string
                              type: object
                          type: object
                        type: array
                      mirror:
                        description: Mirror HTTP traffic to a another destination
                          in addition to forwarding the requests to the intended destination.
                          Mirrored traffic is on a best effort basis where the sidecar/gateway
                          will not wait for the mirrored cluster to respond before
                          returning the response from the original destination.  Statistics
                          will be generated for the mirrored destination.
                        properties:
                          host:
                            description: "REQUIRED. The name of a service from the
                              service registry. Service names are looked up from the
                              platform's service registry (e.g., Kubernetes services,
                              Consul services, etc.) and from the hosts declared by
                              [ServiceEntry](#ServiceEntry). Traffic forwarded to
                              destinations that are not found in either of the two,
                              will be dropped. \n *Note for Kubernetes users*: When
                              short names are used (e.g. \"reviews\" instead of \"reviews.default.svc.cluster.local\"),
                              Istio will interpret the short name based on the namespace
                              of the rule, not the service. A rule in the \"default\"
                              namespace containing a host \"reviews will be interpreted
                              as \"reviews.default.svc.cluster.local\", irrespective
                              of the actual namespace associated with the reviews
                              service. _To avoid potential misconfigurations, it is
                              recommended to always use fully qualified domain names
                              over short names._"
                            type: string
                          port:
                            description: Specifies the port on the host that is being
                              addressed. If a service exposes only a single port it
                              is not required to explicitly select the port.
                            properties:
                              name:
                                description: Valid port name
                                type: string
                              number:
                                description: Valid port number
                                format: int32
                                type: integer
                            type: object
                          subset:
                            description: The name of a subset within the service.
                              Applicable only to services within the mesh. The subset
                              must be defined in a corresponding DestinationRule.
                            type: string
                        required:
                        - host
                        type: object
                      redirect:
                        description: A http rule can either redirect or forward (default)
                          traffic. If traffic passthrough option is specified in the
                          rule, route/redirect will be ignored. The redirect primitive
                          can be used to send a HTTP 302 redirect to a different URI
                          or Authority.
                        properties:
                          authority:
                            description: On a redirect, overwrite the Authority/Host
                              portion of the URL with this value.
                            type: string
                          uri:
                            description: On a redirect, overwrite the Path portion
                              of the URL with this value. Note that the entire path
                              will be replaced, irrespective of the request URI being
                              matched as an exact path or prefix.
                            type: string
                        type: object
                      removeResponseHeaders:
                        additionalProperties:
                          type: string
                        description: Http headers to remove before returning the response
                          to the caller
                        type: object
                      retries:
                        description: Retry policy for HTTP requests.
                        properties:
                          attempts:
                            description: REQUIRED. Number of retries for a given request.
                              The interval between retries will be determined automatically
                              (25ms+). Actual number of retries attempted depends
                              on the httpReqTimeout.
                            type: integer
                          perTryTimeout:
                            description: 'Timeout per retry attempt for a given request.
                              format: 1h/1m/1s/1ms. MUST BE >=1ms.'
                            type: string
                        required:
                        - attempts
                        - perTryTimeout
                        type: object
                      rewrite:
                        description: Rewrite HTTP URIs and Authority headers. Rewrite
                          cannot be used with Redirect primitive. Rewrite will be
                          performed before forwarding.
                        properties:
                          authority:
                            description: rewrite the Authority/Host header with this
                              value.
                            type: string
                          uri:
                            description: rewrite the path (or the prefix) portion
                              of the URI with this value. If the original URI was
                              matched based on prefix, the value provided in this
                              field will replace the corresponding matched prefix.
                            type: string
                        type: object
                      route:
                        description: A http rule can either redirect or forward (default)
                          traffic. The forwarding target can be one of several versions
                          of a service (see glossary in beginning of document). Weights
                          associated with the service version determine the proportion
                          of traffic it receives.
                        items:
                          properties:
                            destination:
                              description: REQUIRED. Destination uniquely identifies
                                the instances of a service to which the request/connection
                                should be forwarded to.
                              properties:
                                host:
                                  description: "REQUIRED. The name of a service from
                                    the service registry. Service names are looked
                                    up from the platform's service registry (e.g.,
                                    Kubernetes services, Consul services, etc.) and
                                    from the hosts declared by [ServiceEntry](#ServiceEntry).
                                    Traffic forwarded to destinations that are not
                                    found in either of the two, will be dropped. \n
                                    *Note for Kubernetes users*: When short names
                                    are used (e.g. \"reviews\" instead of \"reviews.default.svc.cluster.local\"),
                                    Istio will interpret the short name based on the
                                    namespace of the rule, not the service. A rule
                                    in the \"default\" namespace containing a host
                                    \"reviews will be interpreted as \"reviews.default.svc.cluster.local\",
                                    irrespective of the actual namespace associated
                                    with the reviews service. _To avoid potential
                                    misconfigurations, it is recommended to always
                                    use fully qualified domain names over short names._"
                                  type: string
                                port:
                                  description: Specifies the port on the host that
                                    is being addressed. If a service exposes only
                                    a single port it is not required to explicitly
                                    select the port.
                                  properties:
                                    name:
                                      description: Valid port name
                                      type: string
                                    number:
                                      description: Valid port number
                                      format: int32
                                      type: integer
                                  type: object
                                subset:
                                  description: The name of a subset within the service.
                                    Applicable only to services within the mesh. The
                                    subset must be defined in a corresponding DestinationRule.
                                  type: string
                              required:
                              - host
                              type: object
                            headers:
                              description: Header manipulation rules
                              properties:
                                request:
                                  description: Header manipulation rules to apply
                                    before forwarding a request to the destination
                                    service
                                  properties:
                                    add:
                                      additionalProperties:
                                        type: string
                                      description: Append the given values to the
                                        headers specified by keys (will create a comma-separated
                                        list of values)
                                      type: object
                                    remove:
                                      description: Remove a the specified headers
                                      items:
                                        type: string
                                      type: array
                                    set:
                                      additionalProperties:
                                        type: string
                                      description: Overwrite the headers specified
                                        by key with the given values
                                      type: object
                                  type: object
                                response:
                                  description: Header manipulation rules to apply
                                    before returning a response to the caller
                                  properties:
                                    add:
                                      additionalProperties:
                                        type: string
                                      description: Append the given values to the
                                        headers specified by keys (will create a comma-separated
                                        list of values)
                                      type: object
                                    remove:
                                      description: Remove a the specified headers
                                      items:
                                        type: string
                                      type: array
                                    set:
                                      additionalProperties:
                                        type: string
                                      description: Overwrite the headers specified
                                        by key with the given values
                                      type: object
                                  type: object
                              type: object
                            weight:
                              description: REQUIRED. The proportion of traffic to
                                be forwarded to the service version. (0-100). Sum
                                of weights across destinations SHOULD BE == 100. If
                                there is only destination in a rule, the weight value
                                is assumed to be 100.
                              type: integer
                          required:
                          - destination
                          - weight
                          type: object
                        type: array
                      timeout:
                        description: Timeout for HTTP requests.
                        type: string
                      websocketUpgrade:
                        description: Indicates that a HTTP/1.1 client connection to
                          this particular route should be allowed (and expected) to
                          upgrade to a WebSocket connection. The default is false.
                          Istio's reference sidecar implementation (Envoy) expects
                          the first request to this route to contain the WebSocket
                          upgrade headers. Otherwise, the request will be rejected.
                          Note that Websocket allows secondary protocol negotiation
                          which may then be subject to further routing rules based
                          on the protocol selected.
                        type: boolean
                    type: object
                  type: array
                tcp:
                  description: An ordered list of route rules for TCP traffic. The
                    first rule matching an incoming request is used.
                  items:
                    properties:
                      match:
                        description: Match conditions to be satisfied for the rule
                          to be activated. All conditions inside a single match block
                          have AND semantics, while the list of match blocks have
                          OR semantics. The rule is matched if any one of the match
                          blocks succeed.
                        items:
                          properties:
                            destinationSubnets:
                              description: IPv4 or IPv6 ip address of destination
                                with optional subnet.  E.g., a.b.c.d/xx form or just
                                a.b.c.d.
                              items:
                                type: string
                              type: array
                            gateways:
                              description: Names of gateways where the rule should
                                be applied to. Gateway names at the top of the VirtualService
                                (if any) are overridden. The gateway match is independent
                                of sourceLabels.
                              items:
                                type: string
                              type: array
                            port:
                              description: Specifies the port on the host that is
                                being addressed. Many services only expose a single
                                port or label ports with the protocols they support,
                                in these cases it is not required to explicitly select
                                the port.
                              type: integer
                            sourceLabels:
                              additionalProperties:
                                type: string
                              description: One or more labels that constrain the applicability
                                of a rule to workloads with the given labels. If the
                                VirtualService has a list of gateways specified at
                                the top, it should include the reserved gateway `mesh`
                                in order for this field to be applicable.
                              type: object
                          type: object
                        type: array
                      route:
                        description: The destinations to which the connection should
                          be forwarded to. Weights must add to 100%.
                        items:
                          properties:
                            destination:
                              description: REQUIRED. Destination uniquely identifies
                                the instances of a service to which the request/connection
                                should be forwarded to.
                              properties:
                                host:
                                  description: "REQUIRED. The name of a service from
                                    the service registry. Service names are looked
                                    up from the platform's service registry (e.g.,
                                    Kubernetes services, Consul services, etc.) and
                                    from the hosts declared by [ServiceEntry](#ServiceEntry).
                                    Traffic forwarded to destinations that are not
                                    found in either of the two, will be dropped. \n
                                    *Note for Kubernetes users*: When short names
                                    are used (e.g. \"reviews\" instead of \"reviews.default.svc.cluster.local\"),
                                    Istio will interpret the short name based on the
                                    namespace of the rule, not the service. A rule
                                    in the \"default\" namespace containing a host
                                    \"reviews will be interpreted as \"reviews.default.svc.cluster.local\",
                                    irrespective of the actual namespace associated
                                    with the reviews service. _To avoid potential
                                    misconfigurations, it is recommended to always
                                    use fully qualified domain names over short names._"
                                  type: string
                                port:
                                  description: Specifies the port on the host that
                                    is being addressed. If a service exposes only
                                    a single port it is not required to explicitly
                                    select the port.
                                  properties:
                                    name:
                                      description: Valid port name
                                      type: string
                                    number:
                                      description: Valid port number
                                      format: int32
                                      type: integer
                                  type: object
                                subset:
                                  description: The name of a subset within the service.
                                    Applicable only to services within the mesh. The
                                    subset must be defined in a corresponding DestinationRule.
                                  type: string
                              required:
                              - host
                              type: object
                            headers:
                              description: Header manipulation rules
                              properties:
                                request:
                                  description: Header manipulation rules to apply
                                    before forwarding a request to the destination
                                    service
                                  properties:
                                    add:
                                      additionalProperties:
                                        type: string
                                      description: Append the given values to the
                                        headers specified by keys (will create a comma-separated
                                        list of values)
                                      type: object
                                    remove:
                                      description: Remove a the specified headers
                                      items:
                                        type: string
                                      type: array
                                    set:
                                      additionalProperties:
                                        type: string
                                      description: Overwrite the headers specified
                                        by key with the given values
                                      type: object
                                  type: object
                                response:
                                  description: Header manipulation rules to apply
                                    before returning a response to the caller
                                  properties:
                                    add:
                                      additionalProperties:
                                        type: string
                                      description: Append the given values to the
                                        headers specified by keys (will create a comma-separated
                                        list of values)
                                      type: object
                                    remove:
                                      description: Remove a the specified headers
                                      items:
                                        type: string
                                      type: array
                                    set:
                                      additionalProperties:
                                        type: string
                                      description: Overwrite the headers specified
                                        by key with the given values
                                      type: object
                                  type: object
                              type: object
                            weight:
                              description: REQUIRED. The proportion of traffic to
                                be forwarded to the service version. (0-100). Sum
                                of weights across destinations SHOULD BE == 100. If
                                there is only destination in a rule, the weight value
                                is assumed to be 100.
                              type: integer
                          required:
                          - destination
                          - weight
                          type: object
                        type: array
                    required:
                    - match
                    - route
                    type: object
                  type: array
                tls:
                  items:
                    properties:
                      match:
                        description: REQUIRED. Match conditions to be satisfied for
                          the rule to be activated. All conditions inside a single
                          match block have AND semantics, while the list of match
                          blocks have OR semantics. The rule is matched if any one
                          of the match blocks succeed.
                        items:
                          properties:
                            destinationSubnets:
                              description: IPv4 or IPv6 ip addresses of destination
                                with optional subnet.  E.g., a.b.c.d/xx form or just
                                a.b.c.d.
                              items:
                                type: string
                              type: array
                            gateways:
                              description: Names of gateways where the rule should
                                be applied to. Gateway names at the top of the VirtualService
                                (if any) are overridden. The gateway match is independent
                                of sourceLabels.
                              items:
                                type: string
                              type: array
                            port:
                              description: Specifies the port on the host that is
                                being addressed. Many services only expose a single
                                port or label ports with the protocols they support,
                                in these cases it is not required to explicitly select
                                the port.
                              type: integer
                            sniHosts:
                              description: REQUIRED. SNI (server name indicator) to
                                match on. Wildcard prefixes can be used in the SNI
                                value, e.g., *.com will match foo.example.com as well
                                as example.com. An SNI value must be a subset (i.e.,
                                fall within the domain) of the corresponding virtual
                                service's hosts
                              items:
                                type: string
                              type: array
                            sourceLabels:
                              additionalProperties:
                                type: string
                              description: One or more labels that constrain the applicability
                                of a rule to workloads with the given labels. If the
                                VirtualService has a list of gateways specified at
                                the top, it should include the reserved gateway `mesh`
                                in order for this field to be applicable.
                              type: object
                          required:
                          - sniHosts
                          type: object
                        type: array
                      route:
                        description: The destination to which the connection should
                          be forwarded to.
                        items:
                          properties:
                            destination:
                              description: REQUIRED. Destination uniquely identifies
                                the instances of a service to which the request/connection
                                should be forwarded to.
                              properties:
                                host:
                                  description: "REQUIRED. The name of a service from
                                    the service registry. Service names are looked
                                    up from the platform's service registry (e.g.,
                                    Kubernetes services, Consul services, etc.) and
                                    from the hosts declared by [ServiceEntry](#ServiceEntry).
                                    Traffic forwarded to destinations that are not
                                    found in either of the two, will be dropped. \n
                                    *Note for Kubernetes users*: When short names
                                    are used (e.g. \"reviews\" instead of \"reviews.default.svc.cluster.local\"),
                                    Istio will interpret the short name based on the
                                    namespace of the rule, not the service. A rule
                                    in the \"default\" namespace containing a host
                                    \"reviews will be interpreted as \"reviews.default.svc.cluster.local\",
                                    irrespective of the actual namespace associated
                                    with the reviews service. _To avoid potential
                                    misconfigurations, it is recommended to always
                                    use fully qualified domain names over short names._"
                                  type: string
                                port:
                                  description: Specifies the port on the host that
                                    is being addressed. If a service exposes only
                                    a single port it is not required to explicitly
                                    select the port.
                                  properties:
                                    name:
                                      description: Valid port name
                                      type: string
                                    number:
                                      description: Valid port number
                                      format: int32
                                      type: integer
                                  type: object
                                subset:
                                  description: The name of a subset within the service.
                                    Applicable only to services within the mesh. The
                                    subset must be defined in a corresponding DestinationRule.
                                  type: string
                              required:
                              - host
                              type: object
                            headers:
                              description: Header manipulation rules
                              properties:
                                request:
                                  description: Header manipulation rules to apply
                                    before forwarding a request to the destination
                                    service
                                  properties:
                                    add:
                                      additionalProperties:
                                        type: string
                                      description: Append the given values to the
                                        headers specified by keys (will create a comma-separated
                                        list of values)
                                      type: object
                                    remove:
                                      description: Remove a the specified headers
                                      items:
                                        type: string
                                      type: array
                                    set:
                                      additionalProperties:
                                        type: string
                                      description: Overwrite the headers specified
                                        by key with the given values
                                      type: object
                                  type: object
                                response:
                                  description: Header manipulation rules to apply
                                    before returning a response to the caller
                                  properties:
                                    add:
                                      additionalProperties:
                                        type: string
                                      description: Append the given values to the
                                        headers specified by keys (will create a comma-separated
                                        list of values)
                                      type: object
                                    remove:
                                      description: Remove a the specified headers
                                      items:
                                        type: string
                                      type: array
                                    set:
                                      additionalProperties:
                                        type: string
                                      description: Overwrite the headers specified
                                        by key with the given values
                                      type: object
                                  type: object
                              type: object
                            weight:
                              description: REQUIRED. The proportion of traffic to
                                be forwarded to the service version. (0-100). Sum
                                of weights across destinations SHOULD BE == 100. If
                                there is only destination in a rule, the weight value
                                is assumed to be 100.
                              type: integer
                          required:
                          - destination
                          - weight
                          type: object
                        type: array
                    required:
                    - match
                    - route
                    type: object
                  type: array
              required:
              - hosts
              type: object
          required:
          - name
          - virtualServiceSpec
          type: object
        status:
          properties:
            ready:
              description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                of cluster Important: Run "make" to regenerate code after modifying
                this file'
              type: boolean
          required:
          - ready
          type: object
      type: object
  versions:
  - name: v1beta3
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
